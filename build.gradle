import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version "1.0.+"
	id 'io.github.ladysnake.chenille' version '0.11.3'
	id 'io.github.juuxel.loom-quiltflower' version "1.6.0"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

chenille {
	configureTestmod {
		withBaseTestRuns()
	}

	license = project.license_header
	javaVersion = project.java_version.toInteger()
}

repositories {
	chenille.repositories.allCommonRepositories()
	maven {
		url "https://maven.shedaniel.me"
		content {
			includeGroup("me.shedaniel")
			includeGroup("dev.architectury")
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modIncludeImplementation(libs.cca.base)
	modIncludeImplementation(libs.cca.entity)
	modIncludeImplementation(libs.permissionsApi)
	modLocalImplementation(libs.rei.api)
	modLocalImplementation(libs.emi)

	compileOnly(libs.mcAnnotations)

	modLocalRuntime(libs.modmenu)

	// Test dependencies
	modImplementation(libs.elmendorf)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	withSourcesJar()
}

jar {
	from("COPYING.LESSER") {
		rename { "LICENSE_${project.archivesBaseName}"}
	}
}

remapJar {
	addNestedDependencies.set(false)
}

tasks.register("standaloneJar", Jar) {
	from sourceSets.main.output
	archiveClassifier.set('standalone-dev')
	dependsOn project.classes
}

tasks.register("remapStandaloneJar", RemapJarTask) {
	archiveClassifier.set('standalone')
	inputFile.set(standaloneJar.archiveFile)
	addNestedDependencies.set(true)
	dependsOn project.standaloneJar
}

assemble.dependsOn(remapStandaloneJar)

chenille {
	configurePublishing {
		mainArtifact = remapStandaloneJar.archiveFile
		withLadysnakeMaven()
		withCurseforgeRelease()
		withGithubRelease()
		withModrinthRelease()
	}
}

publishing {
	publications {
		create("relocation", MavenPublication) {
			pom {
				// Old artifact coordinates
				groupId = "io.github.ladysnake"

				distributionManagement {
					relocation {
						// New artifact coordinates
						groupId = "org.ladysnake"
						message = "groupId has been changed"
					}
				}
			}
		}
	}
}